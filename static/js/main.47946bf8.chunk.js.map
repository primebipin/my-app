{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","heading","value","onChange","event","target","style","backgroundColor","color","rows","handleUpClick","neww","toUpperCase","handleLoClick","newText","toLowerCase","handleClearClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","split","length","App","setMode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.47946bf8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n   <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">About</a>\r\n        </li>\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n         <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n  title: PropTypes.string\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n   const handleUpClick= ()=>{\r\n      // console.log(\"Uppercase was Clicked\" + text);\r\n      // setText(\"you have clicked on handleUpClick\");\r\n      // let newText= text.charAt(0);\r\n      let neww=text.toUpperCase();\r\n      setText(neww);\r\n   }\r\n   const handleLoClick= ()=>{\r\n      // console.log(\"Uppercase was Clicked\" + text);\r\n      // setText(\"you have clicked on handleUpClick\");\r\n      let newText= text.toLowerCase();\r\n      setText(newText);\r\n   }\r\n   const handleClearClick=()=>{\r\n      setText(\"\");\r\n   }\r\n   const handleCopy=()=>{\r\n      var text=document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n   }\r\n   const handleOnChange=(event)=>{\r\n      // console.log(\"On Change\");\r\n      setText(event.target.value);\r\n   }\r\n\r\n\r\n   const [text,setText]= useState('Enter text here');\r\n\r\n\r\n  return (\r\n   <>\r\n      <div className=\"container\">\r\n         <div>\r\n         <h1>{props.heading}</h1>\r\n         <div className=\"mb-3\">\r\n         <textarea className=\"form-control\" value={text}  onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#292828':'white' , color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n         </div>\r\n         <button className='btn btn-primary mx-2' onClick={handleUpClick}>Convert  to upperCase</button>\r\n         <button className='btn btn-primary mx-2' onClick={handleLoClick}>Convert  to lowerCase</button>\r\n         <button className='btn btn-primary mx-2' onClick={handleClearClick}>Clear the text</button>\r\n         <button className='btn btn-primary mx-2' onClick={handleCopy}>Copy the text</button>\r\n       </div>\r\n    </div>\r\n    <div className=\"container my-4\" >\r\n      <h3>Summmary of text</h3>\r\n    </div>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n      <h5>Preview</h5>\r\n      <p>{text}</p>\r\n    </>\r\n  )\r\n}\r\n","\nimport React from 'react';\nimport { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='black';\n      document.body.style.color='white';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      document.body.style.color='black';\n    }\n  }\n\n  return (\n    <>\n    {/* <BrowserRouter> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n   <div className=\"container my-3\">\n      {/* <Routes> */}\n        {/* <Route path=\"/\" element={ */}\n        <TextForm heading=\"Enter the Text to analyze\" mode={mode} />\n        {/* } />\n        <Route path=\"/about\" element={<About />}/>\n      </Routes> */}\n   \n   </div>\n  {/* </BrowserRouter> */}\n\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}